<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board">
    <select id="countBoard" parameterType="string" resultType="integer">
        select count(*)
        from board
        <if test='_parameter != ""'>
            where title like #{keyword} or contents like #{keyword}
        </if>
    </select>

    <select id="findAllBoard" resultType="boardvo" parameterType="map">
        select b.id as id,
        b.title as title,
        b.contents as contents,
        b.hit as hit,
        date_format(b.reg_date, '%Y-%m-%d %h:%i:%s') as reg_date,
        b.g_no as g_no,
        b.o_no as o_no,
        b.depth as depth,
        b.user_id as user_id,
        u.name as user_name
        from board b
        join user u
        where u.id = b.user_id
        <if test='keyword != ""'>
            and b.title like #{keyword} or b.contents like #{keyword}
        </if>
        order by g_no desc, o_no asc
        limit #{currentPage},#{pageSize}
    </select>

    <insert id="insertBoard" parameterType="boardvo">
        insert into board
        values
        <if test='o_no == 1'>
            (null, #{title}, #{contents}, 0, now(), (select max_g_no + 1 from (select IFNULL(MAX(g_no), 0) max_g_no from
            board) temp),
            1, 0, #{user_id})
        </if>
        <if test='o_no != 1'>
            (null, #{title}, #{contents}, 0, now(), #{g_no}, #{o_no}, #{depth}, #{user_id})
        </if>
    </insert>

    <select id="findById" parameterType="long" resultType="boardvo">
        <![CDATA[
        select b.id                                       as id,
               b.title                                    as title,
               b.contents                                 as contents,
               b.hit                                      as hit,
               date_format(reg_date, '%Y-%m-%d %h:%i:%s') as reg_date,
               b.g_no                                     as g_no,
               b.o_no                                     as o_no,
               b.depth                                    as depth,
               b.user_id                                  as user_id,
               u.name                                     as user_name
        from board b
                 join user u
        where b.user_id = u.id
          and b.id = #{id}
        ]]>
    </select>

    <delete id="deleteBoardById" parameterType="map">
        <![CDATA[
        DELETE
        FROM board
        WHERE g_no = #{board.g_no}
          AND o_no >= #{board.o_no}
          AND (o_no < (SELECT MIN(o_no)
                       FROM board
                       WHERE g_no = #{board.g_no} AND o_no > #{board.o_no} AND depth <= #{board.depth}) OR
               (SELECT MIN(o_no)
                FROM board
                WHERE g_no = #{board.g_no} AND o_no > #{board.o_no} AND depth <= #{board.depth}) IS NULL)
          and user_id = #{id}
        ]]>
    </delete>

    <update id="updateBoard" parameterType="boardvo">
        update board
        set title   = #{title},
            contents=#{contents}
        where id = #{id}
    </update>

    <update id="updateReply" parameterType="map">
        update board
        set o_no = o_no + 1
        where g_no = #{g_no}
          and o_no >= #{o_no}
    </update>

    <update id="updateViewById" parameterType="long">
        update board
        set hit = hit + 1
        where id = #{id}
    </update>
</mapper>